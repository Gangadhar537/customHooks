{"ast":null,"code":"import _regeneratorRuntime from \"/project/customHooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/project/customHooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/project/customHooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/project/customHooks/src/components/NewTask/NewTask.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar NewTask = function NewTask(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var enterTaskHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(taskText) {\n      var response, data, generatedId, createdTask;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              setError(null);\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('https://react-http-6b4a6.firebaseio.com/tasks.json', {\n                method: 'POST',\n                body: JSON.stringify({\n                  text: taskText\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error('Request failed!');\n\n            case 8:\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              data = _context.sent;\n              generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n              createdTask = {\n                id: generatedId,\n                text: taskText\n              };\n              props.onAddTask(createdTask);\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](2);\n              setError(_context.t0.message || 'Something went wrong!');\n\n            case 19:\n              setIsLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 16]]);\n    }));\n\n    return function enterTaskHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","fetch","method","body","JSON","stringify","text","headers","response","ok","Error","json","data","generatedId","name","createdTask","id","onAddTask","message"],"sources":["/project/customHooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-6b4a6.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;EAAA;;EACzB,gBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA0BN,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,gBAAgB;IAAA,sEAAG,iBAAOC,QAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cACvBJ,YAAY,CAAC,IAAD,CAAZ;cACAE,QAAQ,CAAC,IAAD,CAAR;cAFuB;cAAA;cAAA,OAIEG,KAAK,CAC1B,oDAD0B,EAE1B;gBACEC,MAAM,EAAE,MADV;gBAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;kBAAEC,IAAI,EAAEN;gBAAR,CAAf,CAFR;gBAGEO,OAAO,EAAE;kBACP,gBAAgB;gBADT;cAHX,CAF0B,CAJP;;YAAA;cAIfC,QAJe;;cAAA,IAehBA,QAAQ,CAACC,EAfO;gBAAA;gBAAA;cAAA;;cAAA,MAgBb,IAAIC,KAAJ,CAAU,iBAAV,CAhBa;;YAAA;cAAA;cAAA,OAmBFF,QAAQ,CAACG,IAAT,EAnBE;;YAAA;cAmBfC,IAnBe;cAqBfC,WArBe,GAqBDD,IAAI,CAACE,IArBJ,EAqBU;;cACzBC,WAtBe,GAsBD;gBAAEC,EAAE,EAAEH,WAAN;gBAAmBP,IAAI,EAAEN;cAAzB,CAtBC;cAwBrBN,KAAK,CAACuB,SAAN,CAAgBF,WAAhB;cAxBqB;cAAA;;YAAA;cAAA;cAAA;cA0BrBjB,QAAQ,CAAC,YAAIoB,OAAJ,IAAe,uBAAhB,CAAR;;YA1BqB;cA4BvBtB,YAAY,CAAC,KAAD,CAAZ;;YA5BuB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAhBG,gBAAgB;MAAA;IAAA;EAAA,GAAtB;;EA+BA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEA,gBAAvB;MAAyC,OAAO,EAAEJ;IAAlD;MAAA;MAAA;MAAA;IAAA,SADF,EAEGE,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,SAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAMD,CAzCD;;GAAMJ,O;;KAAAA,O;AA2CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}